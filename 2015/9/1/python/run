#! /usr/bin/env python

import sys, re

current_route = []
current_time = float('inf')

cities = set()
costs = dict()

examples = [
    'London to Dublin = 464',
    'London to Belfast = 518',
    'Dublin to Belfast = 141']

for line in sys.stdin:
    match = re.match(r'(\w+) to (\w+) = (\d+)', line)

    city1 = match.group(1)
    city2 = match.group(2)
    cost = int(match.group(3))

    cities.add(city1)
    cities.add(city2)
    costs[(city1, city2)] = cost
    costs[(city2, city1)] = cost

def all_paths(cities):

    if len(cities) == 0:
        return

    if len(cities) == 1:
        yield [next(iter(cities))]
        return

    for city in cities.copy():
        cities.remove(city)

        for path in all_paths(cities):
            yield [city] + path

        cities.add(city)

def cost(costs, path):
    total = 0
    for i in range(len(path) - 1):
        total += costs[(path[i], path[i+1])]

    return total

print(min(cost(costs, path) for path in all_paths(cities)))
